// First, apply the publishing plugin
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:0.9.10"
  }
}

apply plugin: "com.gradle.plugin-publish"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// Apply other plugins here, e.g. java plugin for a plugin written in java or
// the groovy plugin for a plugin written in groovy

// If your plugin has any external java dependencies, Gradle will attempt to
// downloaded them from JCenter for anyone using the plugins DSL
// so you should probably use JCenter for dependency resolution in your own
// project.
repositories {
  jcenter()
}

dependencies {
  compile gradleApi()
  compile localGroovy() //not needed for Java plugins
  // other dependencies that your plugin requires
  testCompile("org.junit.jupiter:junit-jupiter-api:5.3.1")
  testCompile("org.junit.jupiter:junit-jupiter-params:5.3.1")
  testRuntime("org.junit.platform:junit-platform-launcher:1.3.1")
  testRuntime("org.junit.jupiter:junit-jupiter-engine:5.3.1")
}

// Unless overridden in the pluginBundle config DSL, the project version will
// be used as your plugin version when publishing
version = "0.0.4"
group = "net.karlmartens.gitversion"

// The configuration example below shows the minimum required properties
// configured to publish your plugin to the plugin portal
pluginBundle {
  website = 'https://github.com/3esi/gitversion-plugin'
  vcsUrl = 'https://github.com/3esi/gitversion-plugin.git'
  description = 'Use Git to determine build version plugin'
  tags = ['Git', 'version', 'build']

  plugins {
    GitVersionPlugin {
      id = 'net.karlmartens.gitversion'
      displayName = 'Git build version plugin'
    }
  }
}

